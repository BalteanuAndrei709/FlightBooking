version: '3.8'

services:
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
        SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092, kafka2:9092, kafka3:9092
        SCHEMA_REGISTRY_DEBUG: 'true'
    restart: unless-stopped

  schema-registry-ui:
    image: landoop/schema-registry-ui:latest
    container_name: schema-registry-ui
    depends_on:
      - schema-registry
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: unless-stopped

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    ports:
      - "8197:8197"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:8197,PLAINTEXT://kafka1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    restart: unless-stopped

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    ports:
      - "8198:8198"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:8198,PLAINTEXT://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    restart: unless-stopped

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    ports:
      - "8199:8199"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:8199,PLAINTEXT://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka1
    ports:
      - "8190:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: Booking Flight
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092, kafka2:9092, kafka3:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./volumes/admin_service:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=admin_service

  notification-service:
    depends_on:
      - mongodb
      - kafka1
      - kafka2
      - kafka3
    build:
      context: ./NotificationService
    container_name: notification-service
    ports:
      - "8070:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/notifications?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092

  admin-service:
    depends_on:
      - postgres
    build:
      context: ./AdminService
    container_name: admin-service
    ports:
      - "8888:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATASOURCE_URl : jdbc:postgresql://postgres:5432/admin_service
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27020:27017" # Exposing MongoDB on port 27020 on the host
    volumes:
      - ./volumes/operator_service:/data/db

  operator-service-wizzair:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    ports:
      - "8090:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: WizzAir
    container_name: operator-service-wizzair

  operator-service-tarom:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-tarom
    ports:
      - "8091:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Tarom

  operator-service-lufthansa:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-lufthansa
    ports:
      - "8092:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Lufthansa

  operator-service-ryanair:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-ryanair
    ports:
      - "8093:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Ryanair

  operator-service-america-airlines:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-america-airlines
    ports:
      - "8094:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: America Airlines

  operator-service-emirates:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-emirates
    ports:
      - "8095:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Emirates

  operator-service-delta-airlines:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-delta-airlines
    ports:
      - "8096:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Delta Airlines

  operator-service-united-airlines:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-united-airlines
    ports:
      - "8097:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: United Airlines


  operator-service-southwest-airlines:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-southwest-airlines
    ports:
      - "8098:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Southwest Airlines

  operator-service-turkish-airlines:
    depends_on:
      - mongodb
    build:
      context: ./OperatorService
    container_name: operator-service-turkish-airlines
    ports:
      - "8099:8000"
    environment:
      SERVER_PORT: 8000
      SPRING_DATA_MONGODB_URI: mongodb://root:root@mongodb:27017/operator?authSource=admin
      OPERATOR_NAME: Turkish Airlines

  flight-search-service:
    build:
      context: ./FlightSearchService
    container_name: flight-search-service
    ports:
      - "8889:8000"
    environment:
      SERVER_PORT: 8000
    depends_on:
      - operator-service-lufthansa
      - operator-service-wizzair
      - operator-service-america-airlines
      - operator-service-delta-airlines
      - operator-service-emirates
      - operator-service-ryanair
      - operator-service-southwest-airlines
      - operator-service-tarom
      - operator-service-turkish-airlines
      - operator-service-united-airlines

volumes:
  db:
